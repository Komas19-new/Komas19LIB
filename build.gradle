plugins {
    id 'java'
    // id 'maven-publish'
}

group = 'xyz.komas19'
version = '1.0.4'

repositories {
    mavenCentral()
    maven {
        url "https://repo.purpurmc.org/snapshots"
    }
    /*
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
     */
}

// Define the sources JAR task
task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

dependencies {
    implementation "org.purpurmc.purpur:purpur-api:1.20.4-R0.1-SNAPSHOT"
    implementation "org.projectlombok:lombok:1.18.28"
    // implementation 'org.sonatype.central:central-publishing-maven-plugin:0.3.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
/*
def serverCredentials = new XmlSlurper().parse(file('settings.xml'))

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = group
            artifactId = 'your-artifact-id' // Replace with your artifact ID
            version = project.version
        }
    }
    repositories {
        maven {
            // Repository URL
            url = uri('https://repo.maven.apache.org/maven2')
            // Server ID
            credentials {
                username = serverCredentials.username
                password = serverCredentials.password
            }
        }
    }
}
 */
